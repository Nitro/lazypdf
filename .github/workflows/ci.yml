on:
  push:
    branches:
      - '**'
      - '!main'

name: CI
jobs:
  quality:
    name: Quality
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Go cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/Library/Caches/go-build
            ~/go/pkg/mod
          key: ${{ matrix.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-go-

      - name: Dependency linter
        if: matrix.os == 'ubuntu-latest'
        run: |
          go mod tidy
          git add .
          git diff --cached --exit-code

      - name: Build
        run: go build .

      - name: Test
        run: |
          go get github.com/mfridman/tparse
          go test -race -cover -covermode=atomic -json | tparse -all
          go test -race -bench .

      - name: Install valgrind
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends --yes valgrind

      - name: Test & valgrind
        if: matrix.os == 'ubuntu-latest'
        run: |
          go test -c .
          valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes ./lazypdf.test

      - name: Go golangci-lint
        if: matrix.os == 'ubuntu-latest'
        run: |
          go get github.com/golangci/golangci-lint/cmd/golangci-lint@v1.40.1
          golangci-lint run -c misc/golangci/config.yml ./...
